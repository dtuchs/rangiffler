plugins {
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'org.rangiffler'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.tailrocks.graphql:graphql-datetime-spring-boot-starter:6.0.0'
    implementation 'org.flywaydb:flyway-core:10.17.1'
    implementation 'org.flywaydb:flyway-mysql:10.17.1'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
}

jib {
    container {
        ports = ['8080']
        jvmFlags = ['-Dspring.profiles.active=docker']
        creationTime = 'USE_CURRENT_TIMESTAMP'
        labels = [
                'maintainer': 'Dmitrii Tuchs @dtuchs',
                'version'   : "${project.version}".toString()
        ]
    }
    from {
        image = "${project.ext.dockerImage}"
        platforms {
            platform {
                architecture = "${project.ext.dockerArch}"
                os = 'linux'
            }
        }
    }
    to {
        image = "dtuchs/${project.name}"
        tags = ['latest', "${project.version}"]
    }
}

tasks.jib.dependsOn test
tasks.jibDockerBuild.dependsOn test

tasks.register('printVersion') {
    doLast {
        println project.version
    }
}

test {
    useJUnitPlatform()
}
